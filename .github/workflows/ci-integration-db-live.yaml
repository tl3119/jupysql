# CI - DB Integration - Cloud is designed to run integration testing against to cloud database
# Target database: Snowflake
# Sqlalchemy version: 1.4 (required by snowflake-sqlalchemy)
# Please aware that if you want to test locally, configure those environment variables: ['SF_USERNAME', 'SF_PASSWORD', 'SF_DATABASE']

name: CI - DB Integration - Cloud 

on:
  workflow_call:

jobs:
  database-live-integration-test:
    strategy:
      matrix:
        python-version: ['3.11']
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
  
      - name: Set up Environment Vars
        id: secret-check
        # perform secret check & put boolean result as an output
        shell: bash
        run: |
          if [ "${{ secrets.SF_USERNAME }}" != '' ]; then
            echo "available=true" >> $GITHUB_OUTPUT;
          else
            echo "available=false" >> $GITHUB_OUTPUT;
          fi

      - name: Set up Python ${{ matrix.python-version }}
        if : ${{ steps.secret-check.outputs.available == 'true' }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      

      - name: Install dependencies
        if: ${{ steps.secret-check.outputs.available == 'true' }}
        run:
          pip install ".[integration]"
      - name: Integration Test
        if: ${{ steps.secret-check.outputs.available == 'true'}}
        env:
          SF_USERNAME: ${{ secrets.SF_USERNAME }}
          SF_PASSWORD: ${{ secrets.SF_PASSWORD }}
          SF_DATABASE: ${{ secrets.SF_DATABASE }}
        run: |
          # Run the integration test with live option
          python -c "import sqlalchemy; print('Sqlalchemy version ', sqlalchemy.__version__)"
          pytest src/tests/integration --verbose --live